//
//  Code for switching sections
//  skeleton - print outputs
//
//  Created by Bryony Gatehouse on 5/05/18.
//  Copyright Â© 2018 Bryony Gatehouse. All rights reserved.
//

#include <stdio.h>
#include <time.h>
#include "E101.h">
#include <stdlib.h>
#include <ctype.h>

#define CAMERA_WIDTH 320 //Control Resolution from Camera
#define CAMERA_HEIGHT 240 //Control Resolution from Camera
unsigned char pixels_buf[CAMERA_WIDTH*CAMERA_HEIGHT*4];

// returns color component (color==0 -red,color==1-green,color==2-blue
// color == 3 - luminocity
// for pixel located at (row,column)
unsigned char get_pixel( int row,int col, int color)
{
    // calculate address in 1D array of pixels
    int address = CAMERA_WIDTH*row*3 + col*3;
    if ((row < 0 ) || (row > CAMERA_HEIGHT) )
    {
        printf("row is out of range\n");
        return -1;
    }
    if ( (col< 0) || (col > CAMERA_WIDTH))
    {
        printf("column is out of range\n");
        return -1;
    }
    if (color==0)
    {
        return (pixels_buf[address]);
    }
    if (color==1)
    {
        return (pixels_buf[address + 1]);
    }
    if (color==2)
    {
        return (pixels_buf[address + 2]);
    }
    if (color==3)
    {
        unsigned char y = (pixels_buf[address] + pixels_buf[address+1] +pixels_buf[address+2])/3;
        return y;
    }
    printf("Color encoding wrong: 0-red, 1-green,2-blue,3 - luminosity\n");
    return -2; //error
}

int main() {
  
  init();
  int section = 1;
  
  //section 1 condition = finished (talked to door)
  while (section==1) {
    int a = take_picture();
    int f = section1(a);
    if (f!=0){ section=2; }
 
  //section 2 condition = comes to white line horizontal to camera
  while(section==2){
    int a = take_picture();
    int min = 255;
    int max = 0;
    for (int i = 0; i <320;i++){
      int pix = get_pixel(50, i, 3);
      if (pix>max) { max = pix; }
      if (pix<min) { max = pix; }
    }
    int thr = (max-min)/2;
    int whi = 0;
    for (int i = 0; i <320;i++){
      int pix = get_pixel(120, i, 3);
      if (pix>thr) { whi++; }
    }
    if (whi>300){ section = 3; }
    section2(a);
    }
  
  //section 3 condition = come to red line
  while(section==3){
    int a = take_picture();
    int min = 255;
    int max = 0;
    for (int i = 0; i <320;i++){
      int pix = get_pixel(50, i, 3);
      if (pix>max) { max = pix; }
      if (pix<min) { max = pix; }
    }
    int thr = (max-min)/2;
    int whi = 0;
    for (int i = 0; i <320;i++){
      int pix = get_pixel(120, i, 3);
      if (pix>thr) { 
        red = get_pixel(120, i, 0);
        green = get_pixel(120, i, 1);
        blue = get_pixel(120, i, 2);
        if (red>thr && blue<thr && green<thr)
          whi++;}
      }
    }
    if (whi > 50){
      section=4;
    }
    section3(a);
  }
  
  //section 4  condition = forever
  while (section==4){
  section4();
}
